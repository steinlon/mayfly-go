export default {
    docker: {
        containerConf: 'Container Config',
        addr: 'Address',
        addrTips: 'eg: unix:///var/run/docker.sock „ÄÅtcp://192.168.1.1',

        container: 'Container',
        containerName: 'Container Name',
        running: 'Running',
        stopped: 'Stopped',
        name: 'Container Name',
        ip: 'IP Address',
        status: 'Status',
        stats: 'Stats',
        memory: 'Memory',
        stop: 'Stop',
        stopContainerConfirm: 'Are you sure to stop container [{name}] ?',
        removeContainerConfirm: 'Are you sure to remove container [{name}] ?',
        restart: 'Restart',
        createContainer: 'Create Container',
        mount: 'Mount',
        hostDir: 'Host Directory',
        containerDir: 'Container Directory',
        permission: 'Permission',
        rw: 'RW',
        ro: 'RO',
        port: 'Port',

        image: 'Image',
        tag: 'Tag',
        size: 'Size',
        used: 'Used',
        unUsed: 'UnUsed',
        imageName: 'Image Name',
        log: 'Log',
        lines: 'Lines',
        follow: 'Follow',
        stopImageConfirm: 'Are you sure to stop image [{name}] ?',
        export: 'Export',
        imageUploading: 'Image uploading, please wait...',
        imageTips: 'Support manual input and select',
        forcePull: 'Force Pull Image',
        hostPortPlaceholder: '80',
        forcePullTips: 'Ignore the server existing image, pull again',
        server: 'Server',
        protocol: 'Protocol',
        networkMode: 'Network Mode',
        consoleTerminal: 'Console Terminal',
        otherOption: 'Other Option',
        tty: 'tty',
        openStdin: 'stdin (-i)',
        privileged: 'Privileged',
        restartPolicy: 'Restart Policy',
        noRestart: 'No Restart',
        alwaysRestart: 'Always Restart',
        onFailure: 'On Failure',
        unlessStopped: 'Unless Stopped',
        cpuShare: 'CPU Share',
        cpuShareTips: 'The default container share is 1024 cpus, and increasing it will give the current container more CPU time',
        cpuQuota: 'CPU Quota',
        cpuLimitTips: 'A CPU limit of 0 turns off the limit',
        cpuCanUseTips: 'The maximum available is {cpuTotal} cores',
        core: 'Core',
        memoryLimit: 'Memory Limit',
        memoryLimitTips: 'A memory limit of 0 turns off the limit',
        shmSize: 'Shm Size',
        memoryCanUseTips: 'Maximum available {memTotal}',
        tagTips: `One in a row, for example:
tag1=value1
tag2=value2`,
        envParam: 'Env Param',
        envParamTips: `One in a row, for example:
env1=value1
env2=value2`,
        device: 'Device',
        driver: 'Driver',
        driverTips: 'Device drivers to be used by the container, e.g. : nvidia, etc',
        count: 'Count',
        capabilitie: 'Capabilitie',
        deviceId: 'Device ID',
        capabilitiePlaceholder: 'eg: gpu',
    },
};
